# Flask Monolith Template - .gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the .idea directory in version control.
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Flask specific
app.db
app.db-journal
*.db
*.db-journal
*.sqlite
*.sqlite3
migrations/versions/*.py
!migrations/versions/.gitkeep

# Logs
logs/
*.log
*.log.*

# Uploads
uploads/
!uploads/.gitkeep

# Static files (se gerados automaticamente)
# app/static/dist/
# app/static/build/

# Temporary files
*.tmp
*.temp
*.bak
*.backup

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.yaml.bak
*.yml.bak
kustomization.yaml

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry

# SSL certificates
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
ssl/
certs/

# Configuration files with secrets
config.local.py
secrets.py
.secrets

# Backup files
*.backup
*.bak
*.old

# Cache directories
.cache/
.npm/
.yarn/
node_modules/

# Build artifacts
build/
dist/
*.egg-info/

# Documentation builds
docs/_build/
docs/build/
site/

# Profiling data
*.prof
*.profile

# Memory dumps
*.hprof
*.dump

# Application specific
# Adicione aqui arquivos específicos da sua aplicação

# Local development
.local/
local/
dev/

# Monitoring and metrics
prometheus/
grafana/

# Email templates (se compilados)
# templates/email/compiled/

# API documentation (se gerada)
# docs/api/

# Localization
# locale/
# *.mo

# Media files (dependendo do projeto)
# media/
# static/media/

# Search indexes
# whoosh_index/
# elasticsearch/

# Redis dumps
dump.rdb

# PostgreSQL
*.sql.bak

# MySQL
*.sql.gz

# MongoDB
*.bson

# Jupyter
.ipynb_checkpoints/

# R
.Rhistory
.RData
.Ruserdata

# MATLAB
*.asv

# Temporary directories
tmp/
temp/

# IDE specific
.project
.pydevproject
.settings/
.classpath

# Package managers
package-lock.json
yarn.lock
Pipfile.lock
poetry.lock

# Deployment
deploy/
deployment/
.deploy/

# Monitoring
.monitoring/
monitoring/

# Scripts
scripts/local/
scripts/dev/

# Keep empty directories
!.gitkeep
!**/.gitkeep